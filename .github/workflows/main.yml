# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Python Code Quality and Lint
        # You may pin to the exact commit or the version.
        # uses: ricardochaves/python-lint@32032eca67291cd71f88d79e61bc4b904ee03265
        uses: ricardochaves/python-lint@v1.3.0
        with:
          # A list of all paths to test
          python-root-list: # optional, default is .
          # Use Pylint
          use-pylint: # optional, default is true
          # Use pycodestyle
          use-pycodestyle: # optional, default is true
          # Use Flake8
          use-flake8: # optional, default is true
          # Use Black
          use-black: # optional, default is true
          # Use mypy
          use-mypy: # optional, default is true
          # Use isort
          use-isort: # optional, default is true
          # Extra options: pylint $(extra-pylint-options) $(python-root-list)
          extra-pylint-options: # optional, default is 
          # Extra options: pycodestyle $(extra-pycodestyle-options) $(python-root-list)
          extra-pycodestyle-options: # optional, default is 
          # Extra options: flake8 $(extra-flake8-options) $(python-root-list)
          extra-flake8-options: # optional, default is 
          # Extra options: black --check $(extra-black-options) $(python-root-list)
          extra-black-options: # optional, default is 
          # Extra options: mypy $(extra-mypy-options) $(python-root-list)
          extra-mypy-options: # optional, default is 
          # Extra options: isort -rc $(extra-isort-options) $(python-root-list) -c --diff 
          extra-isort-options: # optional, default is 
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@4a531fa5a603bab87dfa56578bd82b28508c9547
        uses: docker/build-push-action@v2.2.2
        with:
          # Builder instance
          builder: # optional
          # Build's context is the set of files located in the specified PATH or URL
          context: # optional
          # Path to the Dockerfile
          file: # optional
          # List of build-time variables
          build-args: # optional
          # List of metadata for an image
          labels: # optional
          # List of tags
          tags: test:test
          # Always attempt to pull a newer version of the image
          pull: # optional, default is false
          # Sets the target stage to build
          target: # optional
          # List of extra privileged entitlement (eg. network.host,security.insecure)
          allow: # optional
          # Do not use cache when building the image
          no-cache: # optional, default is false
          # List of target platforms for build
          platforms: # optional
          # Load is a shorthand for --output=type=docker
          load: # optional, default is false
          # Push is a shorthand for --output=type=registry
          push: # optional, default is false
          # List of output destinations (format: type=local,dest=path)
          outputs: # optional
          # List of external cache sources for buildx (eg. user/app:cache, type=local,src=path/to/dir)
          cache-from: # optional
          # List of cache export destinations for buildx (eg. user/app:cache, type=local,dest=path/to/dir)
          cache-to: # optional
          # List of secrets to expose to the build (eg. key=value, GIT_AUTH_TOKEN=mytoken)
          secrets: # optional
          # GitHub Token used to authenticate against a repository for Git context
          github-token: # optional, default is ${{ github.token }}
          # List of SSH agent socket or keys to expose to the build
          ssh: # optional
          
          
      - name: Aqua Security Trivy
        # You may pin to the exact commit or the version.
        # uses: aquasecurity/trivy-action@2b5de510862c22b735aa586acbafe850cfe75148
        uses: aquasecurity/trivy-action@0.0.8
        with:
          # image reference
          image-ref: test:test
          # exit code when vulnerabilities were found
          # exit-code: # optional, default is 0
          # ignore unfixed vulnerabilities
          ignore-unfixed: true # optional
          # severities of vulnerabilities to be displayed
          severity: HIGH,CRITICAL # optional, default is UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # output format (table, json, template)
          # format: # optional, default is table
          # use an existing template for rendering output (@/contrib/sarif.tpl, @/contrib/gitlab.tpl, @/contrib/junit.tpl
          # template: # optional, default is 
          # writes results to a file with the specified file name
          # output: # optional, default is 
